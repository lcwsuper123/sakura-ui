@use 'sass:math';
@use 'sass:map';
@use '../mixins/function' as *;


$types: primary, success, warning, danger, error, info;

$colors: () !default;
$colors: map.deep-merge(
        (
            'white': #ffffff,
            'black': #000000,
            'primary': (
                'base': #409eff,
            ),
            'success': (
                'base': #67c23a,
            ),
            'warning': (
                'base': #e6a23c,
            ),
            'danger': (
                'base': #f56c6c,
            ),
            'error': (
                'base': #f56c6c,
            ),
            'info': (
                'base': #909399,
            ),
        ),
        $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

@mixin set-color-mix-level(
    $type,
    $number,
    $mode: 'light',
    $mix-color: $color-white
) {
    $colors: map.deep-merge(
            (
                $type: (
                    '#{$mode}-#{$number}':
                    mix(
                            $mix-color,
                            map.get($colors, $type, 'base'),
                            math.percentage(math.div($number, 10))
                    ),
                ),
            ),
            $colors
    ) !global;
}

// $colors.primary.light-i
// --el-color-primary-light-i
// 10% 53a8ff
// 20% 66b1ff
// 30% 79bbff
// 40% 8cc5ff
// 50% a0cfff
// 60% b3d8ff
// 70% c6e2ff
// 80% d9ecff
// 90% ecf5ff
@each $type in $types {
    @for $i from 1 through 9 {
        @include set-color-mix-level($type, $i, 'light', $color-white);
    }
}

// --el-color-primary-dark-2
@each $type in $types {
    @include set-color-mix-level($type, 2, 'dark', $color-black);
}

$font-size: () !default;
$font-size: map.deep-merge(
        (
            'extra-large': 20px,
            'large': 18px,
            'medium': 16px,
            'base': 14px,
            'small': 13px,
            'extra-small': 12px
        ),
        $font-size
);

$text-color: () !default;
$text-color: map.deep-merge(
        (
            'primary': #303133,
            'regular': #606266,
            'secondary': #909339,
            'placeholder': #a8abb2,
            'disabled': #c0c4cc
        ),
        $text-color
);
$border-color: () !default;
$border-color: map.merge(
        (
            '': #dcdfe6,
            'light': #e4e7ed,
            'lighter': #ebeef5,
            'extra-light': #f2f6fc,
            'dark': #d4d7de,
            'darker': #cdd0d6,
        ),
        $border-color
);

$fill-color: () !default;
$fill-color: map.merge(
        (
            '': #f0f2f5,
            'light': #f5f7fa,
            'lighter': #fafafa,
            'extra-light': #fafcff,
            'dark': #ebedf0,
            'darker': #e6e8eb,
            'blank': #ffffff,
        ),
        $fill-color
);

$bg-color: () !default;
$bg-color: map.merge(
        (
            '': #ffffff,
            'page': #f2f3f5,
            'overlay': #ffffff,
        ),
        $bg-color
);

$font-family: () !default;
$font-family: map.deep-merge(
        (
            '': "'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', Arial, sans-serif"
        ),
        $font-family
);

$z-index: () !default;
$z-index: map.deep-merge(
        (
            'normal': 1,
            'top': 1000,
            'popper': 2000
        ),
        $z-index
);

$border-width: 1px !default;
$border-style: solid !default;
$border-color-hover: getCssVar('text-color', 'disabled') !default;

$border-radius: () !default;
$border-radius: map.merge(
        (
            'base': 4px,
            'small': 2px,
            'round': 20px,
            'circle': 100%,
        ),
        $border-radius
);
$border: getCssVar('border-width') getCssVar('border-style') getCssVar('border-color');
$box-shadow: () !default;
$box-shadow: map.merge(
        (
            '': (
                0px 12px 32px 4px rgba(0, 0, 0, 0.04),
                0px 8px 20px rgba(0, 0, 0, 0.08),
            ),
            'light': (
                0px 0px 12px rgba(0, 0, 0, 0.12),
            ),
            'lighter': (
                0px 0px 6px rgba(0, 0, 0, 0.12),
            ),
            'dark': (
                0px 16px 48px 16px rgba(0, 0, 0, 0.08),
                0px 12px 32px rgba(0, 0, 0, 0.12),
                0px 8px 16px -8px rgba(0, 0, 0, 0.16),
            ),
        ),
        $box-shadow
);

$common-component-size: () !default;
$common-component-size: map.merge(
        (
            'large': 40px,
            'default': 32px,
            'small': 24px,
        ),
        $common-component-size
);

$overlay-color: () !default;
$overlay-color: map.merge(
        (
            '': rgba(0, 0, 0, 0.8),
            'light': rgba(0, 0, 0, 0.7),
            'lighter': rgba(0, 0, 0, 0.5),
        ),
        $overlay-color
);
//遮罩层颜色
$mask-color: () !default;
$mask-color: map.merge(
        (
            '': rgba(255, 255, 255, 0.9),
            'extra-light': rgba(255, 255, 255, 0.3),
        ),
        $mask-color
);

$disabled: () !default;
$disabled: map.merge(
        (
            'bg-color': getCssVar('fill-color', 'light'),
            'text-color': getCssVar('text-color', 'placeholder'),
            'border-color': getCssVar('border-color', 'light'),
        ),
        $disabled
);

// transition
$transition: () !default;
$transition: map.merge(
        (
            'all': all getCssVar('transition-duration') getCssVar('transition-function-ease-in-out-bezier'),
            'fade': opacity getCssVar('transition-duration') getCssVar('transition-function-fast-bezier'),
            'md-fade': (
                transform getCssVar('transition-duration') getCssVar('transition-function-fast-bezier'),
                opacity getCssVar('transition-duration') getCssVar('transition-function-fast-bezier'),
            ),
            'fade-linear': opacity getCssVar('transition-duration-fast') linear,
            'border': border-color getCssVar('transition-duration-fast') getCssVar('transition-function-ease-in-out-bezier'),
            'box-shadow': box-shadow getCssVar('transition-duration-fast') getCssVar('transition-function-ease-in-out-bezier'),
            'color': color getCssVar('transition-duration-fast') getCssVar('transition-function-ease-in-out-bezier'),
        ),
        $transition
);

$transition-duration: () !default;
$transition-duration: map.merge(
        (
            '': 0.3s,
            'fast': 0.2s,
        ),
        $transition-duration
);

$transition-function: () !default;
$transition-function: map.merge(
        (
            'ease-in-out-bezier': cubic-bezier(0.645, 0.045, 0.355, 1),
            'fast-bezier': cubic-bezier(0.23, 1, 0.32, 1),
        ),
        $transition-function
);

$text: () !default;
$text: map.deep-merge(
        (
            'font-size': getCssVar('font-size', 'base'),
            'color': getCssVar('text-color', 'regular'),
            'multiline': -1
        ),
        $text
);
$text-font-size: () !default;
$text-font-size: map.merge(
        (
            'large': getCssVar('font-size', 'medium'),
            'default': getCssVar('font-size', 'base'),
            'small': getCssVar('font-size', 'extra-small'),
        ),
        $text-font-size
);
// Button
$button: () !default;
$button: map.deep-merge(
        (
            'background-color': getCssVar('fill', 'color', 'blank'),
            'text-color': getCssVar('text', 'color', 'regular'),
            'border-color': getCssVar('border-color'),
            'font-weight': getCssVar('font-weight-primary'),
            'hover-background-color': getCssVar('color', 'primary', 'light', '9'),
            'hover-text-color': getCssVar('color', 'primary'),
            'hover-border-color': getCssVar('color-primary-light-7'),
            'disabled-background-color': getCssVar('fill-color', 'blank'),
            'disabled-text-color': getCssVar('disabled-text-color'),
            'disabled-border-color': getCssVar('border-color', 'light'),
            'active-text-color': getCssVar('button-hover-text-color'),
            'active-border-color': getCssVar('color-primary'),
            'active-background-color': getCssVar('button', 'hover-background-color'),
            'divide-border-color': rgba(255, 255, 255, .5)
        ),
        $button
);
$button-border-width: $border-width;
$button-font-size: () !default;
$button-font-size: map.deep-merge(
        (
            'large': getCssVar('font', 'size', 'base'),
            'default': getCssVar('font', 'size', 'base'),
            'small': 12px
        ),
        $button-font-size
);
$button-border-radius: () !default;
$button-border-radius: map.deep-merge(
        (
            'large': getCssVar('border', 'radius', 'base'),
            'default': getCssVar('border', 'radius', 'base'),
            'small': calc(#{getCssVar('border', 'radius', 'base')} - 1px)
        ),
        $button-border-radius
);
$button-padding-vertical: () !default;
$button-padding-vertical: map.deep-merge(
        (
            'large': 13px,
            'default': 9px,
            'small': 6px
        ),
        $button-padding-vertical
);
$button-padding-horizontal: () !default;
$button-padding-horizontal: map.deep-merge(
        (
            'large': 20px,
            'default': 16px,
            'small': 12px
        ),
        $button-padding-horizontal
);
// input
$input-height: () !default;
$input-height: map.merge($common-component-size, $input-height);


$switch: () !default;
$switch: map.deep-merge(
        (
            'on-color': getCssVar('color-primary'),
            'off-color': getCssVar('border-color')
        ),
        $switch
);

